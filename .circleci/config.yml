version: 2
jobs:
  build:
    docker:
      - image: gcr.io/google_appengine/python
        environment:
          DATABASE_NAME: "appdb"
          DATABASE_USER: "root"
          DATABASE_PASSWD: ""
          GOOGLE_APPLICATION_CREDENTIALS: /var/secrets/key.json
      - image: circleci/mysql
        environment:
          MYSQL_DATABASE: "appdb"
          MYSQL_USER: "root"
          MYSQL_PASSWORD: ""
    steps:
      - checkout

      - run:
          name: "Seteando GOOGLE ACCOUNT SERVICE json"
          command: |
              mkdir /var/secrets
              echo $GoogleAccountServiceJSON > /var/secrets/key.json

      - run:
          name: "probando si se grabo archivo"
          command: cat /var/secrets/key.json

      - run:
          name: "Instalando Virtualenv y Requerimientos"
          command: |
            virtualenv env
            . env/bin/activate
            pip install -r requirements.txt
      - run:
          name: "Instalando Cliente MySql"
          command: apt-get install libmysqlclient-dev
      - run:
          name: "Corriendo TESTs"
          command: |
            . env/bin/activate
            python manage.py test
      - run:
          name: "Generando Estaticos"
          command: |
            . env/bin/activate
            python manage.py collectstatic --noinput
            python manage.py compress
      - run:
          name: "Contenido de estaticos"
          command: ls -la ./staticos

      - run:
          name: "instalando GSUTIL para publicar archivos comprimidos"
          command: |
            set -x
            wget https://storage.googleapis.com/pub/gsutil.tar.gz -O /tmp/gsutil.tar.gz
            tar -zxf /tmp/gsutil.tar.gz -C $HOME
            export PATH=${PATH}:$HOME/gsutil
      - run:
          command: /var/secrets/key.json | $HOME/gsutil/gsutil config -e 
      - run:
          name: "publicando cambios de estaticos"
          command: "$HOME/gsutil/gsutil rsync -R ./staticos/CACHE gs://bdelivery/static/CACHE"

      - setup_remote_docker

      - run:
          name: "Instalando Docker para hacer BUILD"
          command: |
            set -x
            VER="17.09.0-ce"
            wget https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz -O /tmp/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run:
          name: "Docker BUILD y PUSH"
          command: |
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            docker build -t ferock/sopas:$TAG .
            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
            docker push ferock/sopas:$TAG

      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/
